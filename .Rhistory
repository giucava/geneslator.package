sqlite_path <- system.file("extdata", "mgeneslator.sqlite", package = "geneslator.package")
con <- DBI::dbConnect(RSQLite::SQLite(), sqlite_path)
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
View(result)
sqlite_path <- system.file("extdata", "mgeneslator.sqlite", package = "geneslator.package")
con <- DBI::dbConnect(RSQLite::SQLite(), sqlite_path)
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
sqlite_path <- system.file("extdata", "mgeneslator.sqlite", package = "geneslator.package")
con <- DBI::dbConnect(RSQLite::SQLite(), sqlite_path)
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
#16.12.2024
#####aggiorno il database mouse####
#verifico se funziona la connesione al nuovo database sqlite
sqlite_path <- system.file("extdata", "mgeneslator.sqlite", package = "Geneslator")
con <- DBI::dbConnect(RSQLite::SQLite(), sqlite_path)
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
View(result)
DBI::dbDisconnect(con)
devtools::document()
devtools::build()
#devtools::test()
detach("package:Geneslator", unload = TRUE)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
list <- c("Pzp","Igkv13-84","Ptp4a1")
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID")
res <- conversion_id_genes_mouse(list, keyid, outputid)
list <- c("ENSMUSG00000117310","ENSMUSG00000026064")
res <- conversion_id_genes_mouse(list, "ENSEMBL",c("ENSEMBL","SYMBOL"))
library(Geneslator)
list <- c("Pzp","Igkv13-84","Ptp4a1")
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID")
res <- conversion_id_genes_mouse(list, keyid, outputid)
View(res)
list <- "ENSMUSG00000117310"
res <- conversion_id_genes_mouse(list, keyid, outputid)
#####
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
DBI::dbDisconnect(con)
DBI::dbListTables(con)
sqlite_path <- system.file("extdata", "mgeneslator.sqlite", package = "Geneslator")
con <- DBI::dbConnect(RSQLite::SQLite(), sqlite_path)
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
devtools::document()
devtools::build()
#devtools::test()
detach("package:Geneslator", unload = TRUE)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
#devtools::test()
detach("package:Geneslator", unload = TRUE)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
devtools::clean()
devtools::document()
devtools::build()
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
list <- c("Pzp","Igkv13-84","Ptp4a1")
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID")
res <- conversion_id_genes_mouse(list, keyid, outputid)
list <- c("ENSMUSG00000117310","ENSMUSG00000026064")
res <- conversion_id_genes_mouse(list, "ENSEMBL",c("ENSEMBL","SYMBOL"))
#devtools::test()
detach("package:Geneslator", unload = TRUE)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
remove.packages("Geneslator")
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
#16.12.2024
#####aggiorno il database mouse####
#verifico se funziona la connesione al nuovo database sqlite
sqlite_path <- system.file("extdata", "mgeneslator.sqlite", package = "Geneslator")
con <- DBI::dbConnect(RSQLite::SQLite(), sqlite_path)
DBI::dbListTables(con)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
DBI::dbDisconnect(con)
#####
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
library(Geneslator)
list <- c("Pzp","Igkv13-84","Ptp4a1")
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID")
res <- conversion_id_genes_mouse(list, keyid, outputid)
View(res)
list <- c("ENSMUSG00000117310","ENSMUSG00000026064")
res <- conversion_id_genes_mouse(list, "ENSEMBL",c("ENSEMBL","SYMBOL"))
list <- "ENSMUSG00000117310"
View(result)
library(Geneslator)
list <- c("Pzp","Igkv13-84","Ptp4a1")
list <- c("ENSMUSG00000117310","ENSMUSG00000026064")
res <- conversion_id_genes_mouse(list, "ENSEMBL",c("ENSEMBL","SYMBOL"))
list <- "ENSMUSG00000117310"
res <- conversion_id_genes_mouse(list, keyid, outputid)
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
devtools::document()
devtools::build()
devtools::document()
devtools::build()
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
#devtools::test()
detach("package:Geneslator", unload = TRUE)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
#devtools::test()
detach("package:Geneslator", unload = TRUE)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
list <- c("Pzp","Igkv13-84","Ptp4a1")
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID")
res <- conversion_id_genes_mouse(list, keyid, outputid)
list <- c("ENSMUSG00000117310","ENSMUSG00000026064")
res <- conversion_id_genes_mouse(list, "ENSEMBL",c("ENSEMBL","SYMBOL"))
View(res)
list <- "ENSMUSG00000117310"
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
View(result)
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
sqlite_path <- system.file("extdata", "mgeneslator.sqlite", package = "Geneslator")
con <- DBI::dbConnect(RSQLite::SQLite(), sqlite_path)
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
sqlite_path <- system.file("extdata", "mgeneslator.sqlite", package = "Geneslator")
con <- DBI::dbConnect(RSQLite::SQLite(), sqlite_path)
DBI::dbListTables(con)
devtools::document()
devtools::build()
#16.12.2024
#####aggiorno il database mouse####
#verifico se funziona la connesione al nuovo database sqlite
sqlite_path <- system.file("extdata", "mgeneslator.sqlite", package = "Geneslator")
con <- DBI::dbConnect(RSQLite::SQLite(), sqlite_path)
DBI::dbListTables(con)
DBI::dbDisconnect(con)
sqlite_path <- system.file("extdata", "mgeneslator.sqlite", package = "Geneslator")
con <- DBI::dbConnect(RSQLite::SQLite(), sqlite_path)
DBI::dbListTables(con)
#devtools::test()
detach("package:Geneslator", unload = TRUE)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
devtools::document()
devtools::build()
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
#devtools::test()
detach("package:Geneslator", unload = TRUE)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
#devtools::test()
detach("package:Geneslator", unload = TRUE)
devtools::document()
devtools::build()
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
remove.packages("Geneslator")
devtools::document()
devtools::build()
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
list <- c("Pzp","Igkv13-84","Ptp4a1")
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID")
res <- conversion_id_genes_mouse(list, keyid, outputid)
list <- c("ENSMUSG00000117310","ENSMUSG00000026064")
res <- conversion_id_genes_mouse(list, "ENSEMBL",c("ENSEMBL","SYMBOL"))
list <- "ENSMUSG00000117310"
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
#devtools::test()
detach("package:Geneslator", unload = TRUE)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
#####
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
devtools::document()
devtools::build()
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
DBI::dbDisconnect(con)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
devtools::document()
devtools::build()
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
list <- c("Pzp","Igkv13-84","Ptp4a1")
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID")
res <- conversion_id_genes_mouse(list, keyid, outputid)
sqlite_path <- system.file("extdata", "mgeneslator.sqlite", package = "geneslator.package")
con <- DBI::dbConnect(RSQLite::SQLite(), sqlite_path)
DBI::dbListTables(con)
DBI::dbDisconnect(con)
sqlite_path <- system.file("extdata", "mgeneslator.sqlite", package = "Geneslator")
con <- DBI::dbConnect(RSQLite::SQLite(), sqlite_path)
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
sqlite_path
unloadNamespace("Geneslator")
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
list <- c("Pzp","Igkv13-84","Ptp4a1")
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID")
res <- conversion_id_genes_mouse(list, keyid, outputid)
devtools::build()
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
unloadNamespace("Geneslator")
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
list <- c("Pzp","Igkv13-84","Ptp4a1")
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID")
res <- conversion_id_genes_mouse(list, keyid, outputid)
.libPaths()
db_path <- system.file("extdata", "mgeneslator.sqlite", package = "Geneslator")
con <- DBI::dbConnect(RSQLite::SQLite(), db_path)
DBI::dbListTables(con)
#devtools::test()
detach("package:Geneslator", unload = TRUE)
devtools::build()
devtools::install_github("giucava/geneslator.package", force=T)
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
unloadNamespace("Geneslator")
devtools::build()
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
View(result)
list <- c("Pzp","Igkv13-84","Ptp4a1")
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID")
res <- conversion_id_genes_mouse(list, keyid, outputid)
list <- "Ptp4a1"
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID")
res <- conversion_id_genes_mouse(list, keyid, outputid)
View(res)
unloadNamespace("Geneslator")
devtools::build()
devtools::document()
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
list <- "Ptp4a1"
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID")
res <- conversion_id_genes_mouse(list, keyid, outputid)
View(res)
library(Geneslator)
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
list <- "Ptp4a1"
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID")
res <- conversion_id_genes_mouse(list, keyid, outputid)
View(result)
unloadNamespace("Geneslator")
devtools::build()
devtools::document()
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
#devtools::test()
detach("package:Geneslator", unload = TRUE)
devtools::build()
devtools::document()
devtools::install_github("giucava/geneslator.package", force=T)
devtools::install_github("giucava/geneslator.package", force=T)
unloadNamespace("Geneslator")
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
list <- "Ptp4a1"
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID")
res <- conversion_id_genes_mouse(list, keyid, outputid)
View(res)
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
#07/02/2025 ALIAS####
geneslator<- readRDS("/Users/giuli/OneDrive/Desktop/Review/geneslator5alias_31_01.RDS")
colnames(geneslator) <- c("SYMBOL","Gene.type","ENSEMBL","ENTREZID")
mydb <- dbConnect(RSQLite::SQLite(), "/Users/giuli/OneDrive/Desktop/Review/Supplementary.genes/geneslator.sqlite")
dbWriteTable(mydb, "geneslator", geneslator, overwrite =T) #overwrite mi permette di sovrascrivere
library(RSQLite)
dbWriteTable(mydb, "geneslator", geneslator, overwrite =T) #overwrite mi permette di sovrascrivere
mydb <- dbConnect(RSQLite::SQLite(), "/Users/giuli/OneDrive/Desktop/Review/Supplementary.genes/geneslator.sqlite")
dbWriteTable(mydb, "geneslator", geneslator, overwrite =T) #overwrite mi permette di sovrascrivere
dbDisconnect(mydb) # Chiudi la connessione
View(geneslator)
View(geneslator)
colnames(geneslator) <- c("SYMBOL","Gene.type","ENSEMBL","ENTREZID","Alias")
mydb <- dbConnect(RSQLite::SQLite(), "/Users/giuli/OneDrive/Desktop/Review/Supplementary.genes/geneslator.sqlite")
dbWriteTable(mydb, "geneslator", geneslator, overwrite =T) #overwrite mi permette di sovrascrivere
dbDisconnect(mydb) # Chiudi la connessione
mydb <- dbConnect(RSQLite::SQLite(), "/Users/giuli/OneDrive/Desktop/Review/Supplementary.genes/geneslator.sqlite")
tables <- dbListTables(mydb)
print(tables)
all_data <- dbGetQuery(mydb, "SELECT * FROM geneslator")
head(all_data) #FUNZIONA
dbDisconnect(mydb)
#Mouse
mgeneslator<- readRDS("/Users/giuli/OneDrive/Desktop/Geneslator_mouse/mgeneslatoralias_04_02.RDS")
colnames(mgeneslator) <- c("SYMBOL","ENTREZID","ENSEMBL","Gene.type")
colnames(mgeneslator) <- c("SYMBOL","ENTREZID","ENSEMBL","Gene.type","Alias")
View(mgeneslator)
mydb <- dbConnect(RSQLite::SQLite(), "/Users/giuli/OneDrive/Desktop/Geneslator_mouse/mgeneslator.sqlite")
dbWriteTable(mydb, "mgeneslator", mgeneslator, overwrite =T) #overwrite mi permette di sovrascrivere
dbDisconnect(mydb) # Chiudi la connessione
# Riaprire la connessione al database SQLite
mydb <- dbConnect(RSQLite::SQLite(), "/Users/giuli/OneDrive/Desktop/Geneslator_mouse/mgeneslator.sqlite")
tables <- dbListTables(mydb)
print(tables)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(mydb, query)
all_data <- dbGetQuery(mydb, "SELECT * FROM mgeneslator")
dbDisconnect(mydb)
mydb <- dbConnect(RSQLite::SQLite(), "/Users/giuli/OneDrive/Desktop/Geneslator_mouse/mgeneslator.sqlite")
tables <- dbListTables(mydb)
print(tables)
query <- "SELECT * FROM mgeneslator WHERE SYMBOL = 'Ptp4a1'"
result <- DBI::dbGetQuery(mydb, query)
all_data <- dbGetQuery(mydb, "SELECT * FROM mgeneslator")
head(all_data)
dbDisconnect(mydb)
library(devtools)
#07/02/2024####
#Aggiorno il database Human (Ho aggiunto alias)
#07/02/2024####
devtools::document()
devtools::build()
devtools::install_github("giucava/geneslator.package", force=T)
#devtools::test()
detach("package:Geneslator", unload = TRUE)
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
query <-"SELECT * FROM mgeneslator WHERE SYMBOL = 'Tp53'"
result <- DBI::dbGetQuery(con, query)
query <-"SELECT * FROM mgeneslator WHERE SYMBOL = 'Pzp'"
result <- DBI::dbGetQuery(con, query)
View(result)
#devtools::test()
detach("package:Geneslator", unload = TRUE)
#07/02/2024####
devtools::document()
devtools::build()
devtools::install_github("giucava/geneslator.package", force=T)
unloadNamespace("Geneslator")
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
detach("package:Geneslator", unload = TRUE)
devtools::document()
devtools::build()
devtools::install_github("giucava/geneslator.package", force=T)
#07/02/2024####
devtools::document()
devtools::build()
devtools::install_github("giucava/geneslator.package", force=T)
#devtools::test()
detach("package:Geneslator", unload = TRUE)
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
query <-"SELECT * FROM mgeneslator WHERE SYMBOL = 'Pzp'"
result <- DBI::dbGetQuery(con, query)
#devtools::test()
detach("package:Geneslator", unload = TRUE)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
unloadNamespace("Geneslator")
devtools::document()
devtools::build()
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
unloadNamespace("Geneslator")
#devtools::test()
detach("package:Geneslator", unload = TRUE)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
devtools::document()
devtools::build()
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
devtools::document()
devtools::build()
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
remove.packages("Geneslator")
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
#devtools::test()
detach("package:Geneslator", unload = TRUE)
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
library(Geneslator)
con <- DBI::dbConnect(RSQLite::SQLite(), system.file("extdata", "mgeneslator.sqlite", package = "Geneslator"))
DBI::dbListTables(con)
query <-"SELECT * FROM mgeneslator WHERE SYMBOL = 'Pzp'"
result <- DBI::dbGetQuery(con, query)
View(result)
list <- "Ptp4a1"
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID","Alias")
res <- conversion_id_genes_mouse(list, keyid, outputid)
#Test
list <- "Pzp"
keyid <- "SYMBOL"
outputid <- c("ENSEMBL", "SYMBOL", "Gene.type", "ENTREZID","Alias")
res <- conversion_id_genes_mouse(list, keyid, outputid)
View(result)
View(res)
list <- c("ENSMUSG00000117310","ENSMUSG00000026064")
res <- conversion_id_genes_mouse(list, "ENSEMBL",c("ENSEMBL","SYMBOL"))
list_ensembl <- c("ENSG00000139618", "ENSG00000157764")
keyid <- "ENSEMBL"
outputid <- c("ENSEMBL", "SYMBOL","Alias")
filtered_result <- conversion_id_genes(list_ensembl, keyid, outputid)
View(filtered_result)
#07/02/2024####
detach("package:Geneslator", unload = TRUE) #se ho caricato il pacchetto, prima devo fare questo
detach("package:Geneslator", unload = TRUE) #se ho caricato il pacchetto, prima devo fare questo
devtools::document()
devtools::build()
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
#07/02/2024####
detach("package:Geneslator", unload = TRUE) #se ho caricato il pacchetto, prima devo fare questo
devtools::document()
devtools::build()
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
remove.packages("Geneslator")
devtools::document()
devtools::build()
#Fai un commit su github
devtools::install_github("giucava/geneslator.package", force=T)
